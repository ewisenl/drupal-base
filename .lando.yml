# Change this name to something that makes sense for your project
name: changeme

# Use the recipe appropriate for your application.
recipe: drupal8

# Configure the D8 recipe to match up closer to a vanilla platform.sh stack
config:

  # Lando defaults to Apache. Switch to nginx to match Platform.sh.
  via: nginx

  # Set the webroot to match your .platform.app.yaml.
  webroot: web

  # Set this to match the version in your .platform.app.yaml.
  php: 7.2

  # Enable xdebug...
  xdebug: true

  # Lando defaults to the latest MySQL release, but Platform.sh uses MariaDB.
  # Specify the version to match what's in services.yaml.
  database: mariadb:10.1

# Url's for aditional services. Replace changeme with the project name
proxy:
  smtp:
    - mail.changeme.lndo.site

# The following additional build step will install the Platform CLI
# in the application container and auto-run `composer install`
# also imports default.sql.gz on first build. Use `lando db-export default.sql` to generate or update this file
services:
  appserver:
    build:
      - "cd /tmp && curl -sS https://platform.sh/cli/installer | php || true" # FIXME: Check forced success is still nessesary.
      - "composer global require hirak/prestissimo"
    run:
      - "cd /app && scripts/ewise/conditional_import.sh"

  # Portforward can be set to a specific port for a subprocject
  database:
    portforward: true

  smtp:
    type: mailhog
    hogfrom:
      - appserver

# Ensure `composer install` also happens every time you start your site
# Ensure generated files are removed from cache before database is exported
events:
  pre-db-export:
    - appserver: "cd /app && drush cache-rebuild"

# The following entry creates a `lando platform` command that will run
# any Platform CLI command from inside the container if desired.
tooling:
  "apply [force]":
    service: appserver
    description: Applies (often git) changes on disk to site. The force parameter enshures the environment reflects the last commit.
    cmd: cp -a /app/scripts/ewise/development_cleanup.sh /tmp && /tmp/development_cleanup.sh
  commit:
    service: appserver
    description: Uniform way to commit all your site changes
    cmd: /app/scripts/ewise/development_commit.sh
  platform:
    service: appserver
    description: Run Platform CLI commands
    cmd: /var/www/.platformsh/bin/platform
  content-import:
    service: appserver
    description: Pull (replace current) content from a remote site
    cmd: /app/scripts/ewise/content_import.sh
